rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Helper function to check if user is an admin
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Allow authenticated users to read and write their own user document
    match /users/{userId} {
      // Allow the authenticated user to read their own user document
      // and allow admins to read all user documents (required for aggregation queries)
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin());
      
      // Allow users to update/delete their own documents AND allow admins to update/delete any user document
      allow update, delete: if isAuthenticated() && (isOwner(userId) || isAdmin());
      
      allow create: if isAuthenticated() && isOwner(userId);
    }
    
    // Allow users to read public career data
    match /careers/{careerDoc} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
    }
    
    // Allow users to read public sector data
    match /sectors/{sectorDoc} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
    }
    
    // Allow authenticated users to read public video data, only admins can write
    match /videos/{videoId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
    }
    
    // Chat threads - users can only access their own threads
    match /chatThreads/{threadId} {
      // Allow users to read their own chat threads
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // Allow users to create chat threads
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      // Allow users to update or delete their own chat threads
      allow update, delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // Messages in chat threads - same rules as parent thread
      match /messages/{messageId} {
        allow read: if isAuthenticated() && 
          (get(/databases/$(database)/documents/chatThreads/$(threadId)).data.userId == request.auth.uid || 
           isAdmin());
        
        allow create: if isAuthenticated() && 
          get(/databases/$(database)/documents/chatThreads/$(threadId)).data.userId == request.auth.uid;
        
        allow update, delete: if isAuthenticated() && 
          (get(/databases/$(database)/documents/chatThreads/$(threadId)).data.userId == request.auth.uid || 
           isAdmin());
      }
    }
    
    // Chat summaries - users can only access their own summaries
    match /chatSummaries/{summaryId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      allow update, delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // User preferences - users can only access their own preferences
    match /userPreferences/{userId} {
      allow read: if isAuthenticated() && 
        (isOwner(userId) || isAdmin());
      
      allow write: if isAuthenticated() && 
        (isOwner(userId) || isAdmin());
    }
    
    // Allow users to read and write their own video progress
    match /videoProgress/{progressDoc} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
                     resource.data.userId == request.auth.uid && 
                     request.resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // Allow users to read and write their own progress data
    match /userProgress/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 